{
  "id": "dora.dev_1750155905554_ZG9yYS5k",
  "source": "dora.dev",
  "url": "https://dora.dev/capabilities/generative-organizational-culture/",
  "title": "DORA | Capabilities: Generative Organizational Culture",
  "content": "According to research by DORA, organizational culture that is high-trust and emphasizes information flow is predictive of software delivery performance and organizational performance in technology. The idea that a good culture that optimizes information flow is predictive of good outcomes is not a new idea; it is based on research by sociologist Dr. Ron Westrum. Westrum’s research included human factors in system safety, particularly in the context of accidents in technological domains such as aviation and healthcare. In his work with these high risk, highly complex fields, Westrum noted that such a culture influences the way information flows through an organization. Westrum provides three characteristics of good information: It provides answers to the questions that the receiver needs answered. It is timely. It is presented in such a way that the receiver can use it effectively. In his research, he developed the following typology of organizational cultures. Pathological Bureaucratic Generative Power oriented Rule oriented Performance oriented Low cooperation Modest cooperation High cooperation Messengers punished Messengers neglected Messengers trained Responsibilities shirked Narrow responsibilities Risks are shared Bridging discouraged Bridging tolerated Bridging encouraged Failure leads to scapegoating Failure leads to justice Failure leads to inquiry Novelty crushed Novelty leads to problems Novelty implemented Table 1: The Westrum organizational typology model: How organizations process information (Source: Ron Westrum, “A typology of organisation culture”, BMJ Quality & Safety 13, no. 2(2004), doi:10.1136/qshc.2003.009522.) Similar to Dr. Westrum’s findings, DORA research shows that a high-trust, generative culture predicts software delivery and organizational performance in technology. Research from a large two-year study at Google found similar results: that high performing teams need a culture of trust and psychological safety, meaningful work, and clarity. In the 2019 State of DevOps Report further analysis shows that a culture of psychological safety is predictive of software delivery performance, organizational performance, and productivity. How to implement organizational culturelink click to copy link DORA research shows that changing the way people work changes culture; this is echoed in the work of John Shook, who spoke of his experiences in transforming culture: “The way to change culture is not to first change how people think, but instead to start by changing how people behave—what they do.” This is seen in the technical, lean, and product management capabilities they have researched that influence culture. In addition, teams can identify helpful practices to create a generative culture that fosters information flow and trust by examining the six aspects of Westrum’s model of organizational culture, focusing on those behaviors seen in the generative culture: High cooperation. Messengers are trained. Risks are shared. Bridging is encouraged. Failure leads to inquiry. Novelty is implemented. Based on these aspects, here are some practices you can implement to improve your culture: High cooperation. Create cross-functional teams that include representatives from each functional area of the software delivery process (business analysts, developers, quality engineers, ops, security, and so on). This practice lets everyone share the responsibility for building, deploying, and maintaining a product. It’s also important that there is good cooperation within the team. Train the messengers. This means we want people to bring us bad news so we can make things better. Hold blameless postmortems. By removing blame, you remove fear; and by removing fear, you enable teams to surface problems and solve them more effectively. Also create and foster an environment where it is safe to take smart risks and fail, so that anyone can surface problems at any time—even without the ceremony of a postmortem. Share risks. Along with this, encourage shared responsibilities. Quality, availability, reliability and security are everyone’s job. One way to improve the quality of your services is to ensure that developers share responsibility for maintaining their code in production. The improvement in collaboration that comes from sharing responsibility inherently reduces risk: The more eyes on the software delivery process, the more you’ll avoid errors in process or planning. Automation also reduces risk, and with the right tool choice, can enable collaboration. Encourage bridging. Break down silos. In addition to creating cross-functional teams, techniques for breaking down silos include co-locating ops with the dev team; including ops in planning throughout the software delivery lifecycle; and implementing ChatOps. Another tip is to identify someone in the organization whose work you don’t understand (or whose work frustrates you, like procurement) and invite them to coffee or lunch. Informal discussions help foster better communication, and you may understand why they do what they do—and you can come up with creative solutions together. Let failure lead to inquiry. Again, hold blameless postmortems. The response to failure shapes the culture of an organization. Blaming individuals for failures creates a negative culture. If instead, failures lead you to ask questions about what caused the failures and how you can keep them from happening again in the future, you’ve improved your technical system, your processes, and your culture. Implement novelty. Encourage experimentation. Giving employees freedom to explore new ideas can lead to great outcomes. Some companies give engineers time each week for experimentation. Others host internal hack days or mini-conferences to share ideas and collaborate. Many new features and products began this way. When you release your employees from habitual pathways and repetitive tasks, they can generate enormous value for your organization. And remember that novelty isn’t limited to new products and features. Also encourage and reward improvements in process and ideas that help foster collaboration. Common pitfalls of organizational culturelink click to copy link Organizational cultures with high information flow often encounter the following pitfalls: Ignoring the importance of culture altogether, and treating technical work as a technology and process challenge only. Focusing only on local team cultures, and not reaching out to also understand how team cultures interact with the broader organizational culture. Not having enough support, or appropriate support, from leaders and managers for the necessary culture shift and transformation. Ignoring or punishing bad news. It’s better to understand that failures are inevitable in complex systems, and treat them as opportunities to improve and learn. Not encouraging novelty. Admiral Grace Hopper, the famed computer science pioneer and inventor of the compiler, once said, “The most dangerous phrase in the language is ‘we’ve always done it this way.’” Allowing and encouraging teams to experiment and try new things will make work better. By focusing on the six aspects of Westrum’s typology, teams and organizations can work thoughtfully and meaningfully toward improving their culture. How to measure organizational culturelink click to copy link Organizational culture is a perceptual measure, and therefore, best measured using survey methods. The Westrum survey measures, included here, are highly valid and reliable statistically. On my team, information is actively sought. Messengers are not punished when they deliver news of failures or other bad news. On my team, responsibilities are shared. On my team, cross-functional collaboration is encouraged and rewarded. On my team, failures are treated primarily as opportunities to improve the system. On my team, new ideas are welcomed. Present these measures together—unlabeled and untitled—with responses ranging from Strongly Disagree (=1) to Neither Agree nor Disagree (=4) to Strongly Agree (=7). They are a latent construct, which means you can average their scores to provide a single score for your Westrum culture metric. If necessary, you can alter the items slightly to fit your context, but we recommend doing only minor changes in order to preserve the statistical properties. What’s nextlink click to copy link For links to other articles and resources, see the Google Cloud DevOps page. Read A typology of organisational culture, by Ron Westrum. Explore our DevOps research program. Take the DORA quick check to understand where you stand in comparison with the rest of the industry.",
  "timestamp": "2025-06-17T10:25:05.554Z",
  "metadata": {
    "domain": "dora.dev",
    "contentType": "public",
    "authMethod": "none",
    "wordCount": 1274,
    "links": [
      "https://dora.dev/",
      "https://dora.dev/publications/",
      "https://dora.dev/research/",
      "https://dora.dev/capabilities/",
      "https://dora.dev/guides/",
      "https://dora.dev/quickcheck/",
      "https://dora.community/",
      "https://dora.dev/search/",
      "https://google.qualtrics.com/jfe/form/SV_40i28bp9qIMfNjw?source=doradotdev-survey",
      "https://dora.dev/capabilities",
      "http://bmj.co/1BRGh5q",
      "https://qualitysafety.bmj.com/content/13/suppl_2/ii22.short",
      "https://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html",
      "https://en.wikipedia.org/wiki/Psychological_safety",
      "https://dora.dev/research/2019/dora-report/2019-dora-accelerate-state-of-devops-report.pdf",
      "https://cloud.google.com/devops",
      "https://www.devops-research.com/research.html",
      "https://dora.dev/capabilities/code-maintainability/",
      "https://dora.dev/capabilities/documentation-quality/",
      "https://dora.dev/capabilities/teams-empowered-to-choose-tools/",
      "https://dora.dev/capabilities/generative-organizational-culture/",
      "https://dora.dev/capabilities/job-satisfaction/",
      "https://dora.dev/capabilities/learning-culture/",
      "https://dora.dev/capabilities/team-experimentation/",
      "https://dora.dev/capabilities/transformational-leadership/",
      "https://dora.dev/capabilities/well-being/",
      "https://dora.dev/capabilities/continuous-delivery/",
      "https://dora.dev/capabilities/database-change-management/",
      "https://dora.dev/capabilities/deployment-automation/",
      "https://dora.dev/capabilities/flexible-infrastructure/",
      "https://dora.dev/capabilities/loosely-coupled-teams/",
      "https://dora.dev/capabilities/streamlining-change-approval/",
      "https://dora.dev/capabilities/trunk-based-development/",
      "https://dora.dev/capabilities/version-control/",
      "https://dora.dev/capabilities/visual-management/",
      "https://dora.dev/capabilities/wip-limits/",
      "https://dora.dev/capabilities/working-in-small-batches/",
      "https://dora.dev/capabilities/continuous-integration/",
      "https://dora.dev/capabilities/customer-feedback/",
      "https://dora.dev/capabilities/monitoring-and-observability/",
      "https://dora.dev/capabilities/monitoring-systems/",
      "https://dora.dev/capabilities/pervasive-security/",
      "https://dora.dev/capabilities/proactive-failure-notification/",
      "https://dora.dev/capabilities/test-automation/",
      "https://dora.dev/capabilities/test-data-management/",
      "https://dora.dev/capabilities/work-visibility-in-value-stream/",
      "https://cloud.google.com/",
      "https://dora.dev/resources/",
      "https://dora.dev/faq/",
      "https://dora.dev/contact/",
      "https://creativecommons.org/licenses/by-nc-sa/4.0/",
      "https://www.linkedin.com/company/doradotdev/",
      "https://www.youtube.com/@dora-dev",
      "https://github.com/dora-team/dora.dev"
    ],
    "images": [
      "https://dora.dev/img/dora-logo.svg",
      "https://dora.dev/img/cloud-logo-dark.svg"
    ],
    "headings": [
      "H4: Capabilities: climate for learning",
      "H1: Generative organizational culture\n    core",
      "H2: How to implement organizational culturelink click to copy link",
      "H2: Common pitfalls of organizational culturelink click to copy link",
      "H2: How to measure organizational culturelink click to copy link",
      "H2: What’s nextlink click to copy link",
      "H4: Capabilities",
      "H5: Climate for Learning",
      "H5: Fast Flow",
      "H5: Fast Feedback"
    ],
    "description": "DORA is a long running research program that seeks to understand the capabilities that drive software delivery and operations performance. DORA helps teams apply those capabilities, leading to better organizational performance.",
    "keywords": "DevOps, Lead time, Deploy frequency, Change fail rate, MTTR, Time to restore, metrics, DORA",
    "author": "",
    "language": "en"
  },
  "filePath": "C:\\agents\\kb-agent\\scraped\\dora.dev\\2025\\06\\1750155905554_DORA_Capabilities_Generative_Organizational_Culture.json"
}